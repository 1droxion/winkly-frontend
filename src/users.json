# === winkly_backend.py ===
from flask import Flask, request, jsonify
from flask_cors import CORS
import uuid
import json
import os

app = Flask(__name__)
CORS(app)

USER_FILE = "users.json"

# Load users
if os.path.exists(USER_FILE):
    with open(USER_FILE, "r") as f:
        users = json.load(f)
else:
    users = {}

# Save users
def save_users():
    with open(USER_FILE, "w") as f:
        json.dump(users, f, indent=2)

@app.route("/register", methods=["POST"])
def register():
    data = request.json
    email = data.get("email")
    password = data.get("password")
    if email in users:
        return jsonify({"error": "Email already registered"})
    user_id = str(uuid.uuid4())
    users[email] = {
        "id": user_id,
        "email": email,
        "password": password,
        "coins": 5,
        "vip": False
    }
    save_users()
    return jsonify({"user": users[email]})

@app.route("/login", methods=["POST"])
def login():
    data = request.json
    email = data.get("email")
    password = data.get("password")
    user = users.get(email)
    if not user or user["password"] != password:
        return jsonify({"error": "Invalid email or password"})
    return jsonify({"user": user})

@app.route("/get-user", methods=["POST"])
def get_user():
    email = request.json.get("email")
    user = users.get(email)
    if user:
        return jsonify({"user": user})
    return jsonify({"error": "User not found"})

@app.route("/update-coins", methods=["POST"])
def update_coins():
    data = request.json
    email = data.get("email")
    amount = data.get("amount", 0)
    if email in users:
        users[email]["coins"] += amount
        save_users()
        return jsonify({"coins": users[email]["coins"]})
    return jsonify({"error": "User not found"})

@app.route("/update-vip", methods=["POST"])
def update_vip():
    email = request.json.get("email")
    if email in users:
        users[email]["vip"] = True
        save_users()
        return jsonify({"vip": True})
    return jsonify({"error": "User not found"})

if __name__ == "__main__":
    app.run(debug=True)
